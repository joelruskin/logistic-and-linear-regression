import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression 
df=pd.read_csv("Students.xls")
df.head()
x=df[["JEEPRE","JEEMAINS"]]
x.head()
y=df[["STATUS"]]
y.head()
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)
x_train.shape,x_test.shape
y_train.shape,y_test.shape
lm = LinearRegression()
lm=lm.fit(x_train,y_train)
lm
pred=lm.predict(x_test)
pred
y_test
from matplotlib import pyplot as plt
plt.scatter(y_test, pred)
plt.xlabel("True_Values")
plt.ylabel("Predictions")
from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test,pred.round())
cm
from sklearn.metrics import accuracy_score
accuracy=accuracy_score(y_test,pred.round(),normalize=True)
accuracy
##logistic regression



## logistic Regression

import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
 jee=pd.read_csv("Students.xls")
 jee
 x=jee[["JEEPRE","JEEMAINS"]]
 x
 y=jee[["STATUS"]]
 y
 from sklearn.model_selection import train_test_split
 x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)
 x_train.shape,x_test.shape
 y_train.shape,y_test.shape
 lm = LogisticRegression()
 lm=lm.fit(x_train,y_train)
 lm
 pred=lm.predict(x_test)
 pred
 y_test
 from sklearn.metrics import confusion_matrix
 cf=confusion_matrix(y_test,pred)
 cf
 from sklearn.metrics import accuracy_score
 acs=accuracy_score(y_test,pred)
 acs
 from matplotlib import pyplot as plt
 plt.scatter(y_test,pred)
plt.xlabel("true values")
plt.ylabel("predicted values")
